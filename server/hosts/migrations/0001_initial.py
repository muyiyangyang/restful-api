# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2016-12-17 06:22
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cpu',
            fields=[
                ('cpu_id', models.AutoField(primary_key=True, serialize=False)),
                ('cpu_name', models.CharField(default=b'cpu', max_length=32)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('cpu_state', models.BooleanField(default=False)),
                ('choice', models.BooleanField(default=False)),
                ('total', models.CharField(blank=True, max_length=32)),
                ('used', models.CharField(blank=True, max_length=32)),
                ('free', models.CharField(blank=True, max_length=32)),
                ('highlighted', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['cpu_id'],
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('device_id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('device_name', models.CharField(max_length=32, unique=True)),
                ('style', models.CharField(blank=True, choices=[(b'1', b'StandardHost'), (b'2', b'TwoHosts'), (b'3', b'ThreeHosts'), (b'4', b'FourHosts')], default=b'1', max_length=20)),
                ('choice', models.BooleanField(default=False)),
                ('status', models.CharField(blank=True, max_length=32)),
                ('highlighted', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ('device_id',),
            },
        ),
        migrations.CreateModel(
            name='Disk',
            fields=[
                ('disk_id', models.AutoField(primary_key=True, serialize=False)),
                ('disk_name', models.CharField(default=b'sda', max_length=32, unique=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('style', models.CharField(blank=True, choices=[(b'HDD', b'HardDiskDrive'), (b'SSD', b'SolidStateDrives')], default=b'HDD', max_length=20)),
                ('disk_state', models.BooleanField(default=False)),
                ('status', models.CharField(blank=True, max_length=32)),
                ('filesystem', models.CharField(blank=True, default=b'XFS', max_length=32)),
                ('mountpoint', models.CharField(blank=True, max_length=32)),
                ('choice', models.BooleanField(default=False)),
                ('iops', models.CharField(blank=True, max_length=32)),
                ('io', models.CharField(blank=True, max_length=32)),
                ('delay', models.CharField(blank=True, max_length=32)),
                ('total', models.CharField(blank=True, max_length=32)),
                ('used', models.CharField(blank=True, max_length=32)),
                ('free', models.CharField(blank=True, max_length=32)),
                ('highlighted', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['disk_id'],
            },
        ),
        migrations.CreateModel(
            name='Help',
            fields=[
                ('help_id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('help_name', models.CharField(max_length=32, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('highlighted', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ('help_id',),
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('host_id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('host_name', models.CharField(blank=True, max_length=32, unique=True)),
                ('ip', models.GenericIPAddressField(protocol=b'ipv4', unique=True)),
                ('netmask', models.GenericIPAddressField(blank=True, null=True, protocol=b'ipv4')),
                ('gateway', models.GenericIPAddressField(blank=True, null=True, protocol=b'ipv4')),
                ('dns', models.GenericIPAddressField(blank=True, null=True, protocol=b'ipv4')),
                ('style', models.CharField(blank=True, choices=[(b'VM', b'VirtualMachine'), (b'PC', b'PhysicalMachine')], default=b'PC', max_length=20)),
                ('worker', models.BooleanField(default=False)),
                ('choice', models.BooleanField(default=False)),
                ('status', models.CharField(blank=True, max_length=32)),
                ('ipmi_ip', models.GenericIPAddressField(blank=True, null=True, protocol=b'ipv4', unique=True)),
                ('ipmi_username', models.CharField(blank=True, max_length=32, null=True)),
                ('ipmi_password', models.CharField(blank=True, max_length=32, null=True)),
                ('highlighted', models.TextField(blank=True, null=True)),
                ('device_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hosts', to='hosts.Device')),
            ],
            options={
                'ordering': ('host_id',),
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('log_id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('log_name', models.CharField(blank=True, max_length=32)),
                ('log_level', models.CharField(blank=True, max_length=32)),
                ('description', models.TextField(blank=True, null=True)),
                ('highlighted', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ('log_id',),
            },
        ),
        migrations.CreateModel(
            name='Memory',
            fields=[
                ('memory_id', models.AutoField(primary_key=True, serialize=False)),
                ('memory_name', models.CharField(default=b'memory', max_length=32)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('memory_state', models.BooleanField(default=False)),
                ('status', models.CharField(blank=True, max_length=32)),
                ('choice', models.BooleanField(default=False)),
                ('total', models.CharField(blank=True, max_length=32)),
                ('used', models.CharField(blank=True, max_length=32)),
                ('free', models.CharField(blank=True, max_length=32)),
                ('highlighted', models.TextField(blank=True, null=True)),
                ('host_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memorys', to='hosts.Host')),
            ],
            options={
                'ordering': ['memory_id'],
            },
        ),
        migrations.CreateModel(
            name='Nic',
            fields=[
                ('nic_id', models.AutoField(primary_key=True, serialize=False)),
                ('nic_name', models.CharField(default=b'eth0', max_length=32)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('style', models.CharField(blank=True, choices=[(b'1', b'1GbE'), (b'10', b'10GbE')], default=b'1', max_length=20)),
                ('nic_state', models.BooleanField(default=False)),
                ('ip', models.GenericIPAddressField(null=True, protocol=b'ipv4')),
                ('netmask', models.GenericIPAddressField(blank=True, null=True, protocol=b'ipv4')),
                ('gateway', models.GenericIPAddressField(blank=True, null=True, protocol=b'ipv4')),
                ('dns', models.GenericIPAddressField(blank=True, null=True, protocol=b'ipv4')),
                ('choice', models.BooleanField(default=False)),
                ('highlighted', models.TextField(blank=True, null=True)),
                ('host_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nics', to='hosts.Host')),
            ],
            options={
                'ordering': ['nic_id'],
            },
        ),
        migrations.AddField(
            model_name='disk',
            name='host_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disks', to='hosts.Host'),
        ),
        migrations.AddField(
            model_name='cpu',
            name='host_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cpus', to='hosts.Host'),
        ),
    ]
